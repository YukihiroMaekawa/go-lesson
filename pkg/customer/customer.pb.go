// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto

package customer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegistCustomerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address1             string   `protobuf:"bytes,2,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2             string   `protobuf:"bytes,3,opt,name=address2,proto3" json:"address2,omitempty"`
	Address3             string   `protobuf:"bytes,4,opt,name=address3,proto3" json:"address3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegistCustomerRequest) Reset()         { *m = RegistCustomerRequest{} }
func (m *RegistCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*RegistCustomerRequest) ProtoMessage()    {}
func (*RegistCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{0}
}

func (m *RegistCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistCustomerRequest.Unmarshal(m, b)
}
func (m *RegistCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistCustomerRequest.Marshal(b, m, deterministic)
}
func (m *RegistCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistCustomerRequest.Merge(m, src)
}
func (m *RegistCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_RegistCustomerRequest.Size(m)
}
func (m *RegistCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegistCustomerRequest proto.InternalMessageInfo

func (m *RegistCustomerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegistCustomerRequest) GetAddress1() string {
	if m != nil {
		return m.Address1
	}
	return ""
}

func (m *RegistCustomerRequest) GetAddress2() string {
	if m != nil {
		return m.Address2
	}
	return ""
}

func (m *RegistCustomerRequest) GetAddress3() string {
	if m != nil {
		return m.Address3
	}
	return ""
}

type RegistCustomerResponse struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=customerID,proto3" json:"customerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegistCustomerResponse) Reset()         { *m = RegistCustomerResponse{} }
func (m *RegistCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*RegistCustomerResponse) ProtoMessage()    {}
func (*RegistCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{1}
}

func (m *RegistCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistCustomerResponse.Unmarshal(m, b)
}
func (m *RegistCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistCustomerResponse.Marshal(b, m, deterministic)
}
func (m *RegistCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistCustomerResponse.Merge(m, src)
}
func (m *RegistCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_RegistCustomerResponse.Size(m)
}
func (m *RegistCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegistCustomerResponse proto.InternalMessageInfo

func (m *RegistCustomerResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func init() {
	proto.RegisterType((*RegistCustomerRequest)(nil), "customer.RegistCustomerRequest")
	proto.RegisterType((*RegistCustomerResponse)(nil), "customer.RegistCustomerResponse")
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor_9efa92dae3d6ec46) }

var fileDescriptor_9efa92dae3d6ec46 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2e, 0x2d, 0x2e,
	0xc9, 0xcf, 0x4d, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xea,
	0xb9, 0x44, 0x83, 0x52, 0xd3, 0x33, 0x8b, 0x4b, 0x9c, 0xa1, 0x22, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x60, 0xb6, 0x90, 0x14, 0x17, 0x47, 0x62, 0x4a, 0x4a, 0x51, 0x6a, 0x71, 0xb1, 0xa1, 0x04,
	0x13, 0x58, 0x1c, 0xce, 0x47, 0x92, 0x33, 0x92, 0x60, 0x46, 0x91, 0x33, 0x42, 0x92, 0x33, 0x96,
	0x60, 0x41, 0x91, 0x33, 0x56, 0xb2, 0xe0, 0x12, 0x43, 0x77, 0x40, 0x71, 0x41, 0x7e, 0x5e, 0x71,
	0xaa, 0x90, 0x1c, 0x17, 0x17, 0xcc, 0x99, 0x9e, 0x2e, 0x50, 0x77, 0x20, 0x89, 0x18, 0xa5, 0x73,
	0xf1, 0x05, 0x24, 0x56, 0xe6, 0xa6, 0xe6, 0x95, 0x04, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a,
	0x85, 0x72, 0xf1, 0xa1, 0x9a, 0x25, 0x24, 0xaf, 0x07, 0xf7, 0x39, 0x56, 0x6f, 0x4a, 0x29, 0xe0,
	0x56, 0x00, 0x71, 0x86, 0x12, 0x43, 0x12, 0x1b, 0x38, 0xd0, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xa0, 0xa1, 0xa5, 0xa5, 0x46, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaymentServiceClient is the client API for PaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentServiceClient interface {
	RegistCustomer(ctx context.Context, in *RegistCustomerRequest, opts ...grpc.CallOption) (*RegistCustomerResponse, error)
}

type paymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServiceClient(cc *grpc.ClientConn) PaymentServiceClient {
	return &paymentServiceClient{cc}
}

func (c *paymentServiceClient) RegistCustomer(ctx context.Context, in *RegistCustomerRequest, opts ...grpc.CallOption) (*RegistCustomerResponse, error) {
	out := new(RegistCustomerResponse)
	err := c.cc.Invoke(ctx, "/customer.PaymentService/RegistCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentServiceServer is the server API for PaymentService service.
type PaymentServiceServer interface {
	RegistCustomer(context.Context, *RegistCustomerRequest) (*RegistCustomerResponse, error)
}

// UnimplementedPaymentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPaymentServiceServer struct {
}

func (*UnimplementedPaymentServiceServer) RegistCustomer(ctx context.Context, req *RegistCustomerRequest) (*RegistCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegistCustomer not implemented")
}

func RegisterPaymentServiceServer(s *grpc.Server, srv PaymentServiceServer) {
	s.RegisterService(&_PaymentService_serviceDesc, srv)
}

func _PaymentService_RegistCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).RegistCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.PaymentService/RegistCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).RegistCustomer(ctx, req.(*RegistCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.PaymentService",
	HandlerType: (*PaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegistCustomer",
			Handler:    _PaymentService_RegistCustomer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer.proto",
}
